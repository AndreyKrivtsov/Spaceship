syntax = "proto3";

package spaceship.api;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "spaceship/api/api.proto";

option go_package = "apigrpc";

option java_multiple_files = true;
option java_outer_classname = "SpaceShipApi";
option java_package = "tr.com.apps.spaceship.api";

option csharp_namespace = "SpaceShip";

option objc_class_prefix = "SSP";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "Space Ship API v1";
    version: "1.0";
    contact: {
        name: "APPS Information Tech.";
        url: "https://apps.com.tr";
        email: "info@apps.com.tr";
    };
  };
  host: "127.0.0.1:7350";
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "BasicAuth";
      value: {
        type: TYPE_BASIC;
      }
    }
    security: {
    // Made up security so we can apply "Bearer <JWT_TOKEN>"
      key: "BearerJwt";
      value: {
        type: TYPE_INVALID;
      }
    }
  }
  // Default security definition.
  security: {
    security_requirement: {
      key: "BearerJwt";
      value: {};
    }
  }
};

service SpaceShip {

    rpc AuthenticateFingerprint(api.AuthenticateFingerprint) returns (api.Session) {
        option (google.api.http) = {
            post: "/v1/account/authenticate/fingerprint",
            body: "*"
        };
    }

    rpc AuthenticateFacebook(api.AuthenticateFacebook) returns (api.Session) {
        option (google.api.http) = {
            post: "/v1/account/authenticate/facebook",
            body: "*"
        };
    }

    rpc GetLeaderboard(LeaderboardRequest) returns (api.LeaderboardResponse) {
        option (google.api.http) = {
            get: "/v1/leaderboard/{type}/mode/{mode}"
            additional_bindings {
                get: "/v1/leaderboard/{type}/mode/{mode}/page/{page}"
            }
        };
    }

    rpc TestEcho(google.protobuf.Empty) returns (api.Session) {
        option (google.api.http) = {
            get: "/v1/echo"
        };
    }

}